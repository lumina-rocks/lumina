name: Continous Deplyoment

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master

env:
  REGISTRY_NAME: ghcr.io
  IMAGE_NAME: lumina
  MAIN_HOST: ${{ secrets.MAIN_HOST }}
  MAIN_HOST_USERNAME: ${{ secrets.MAIN_HOST_USERNAME }}

jobs:
  # ci:
  #   name: CI
  #   uses: ./.github/workflows/ci.yml

  build_and_push:
    # needs: [ci]
    name: Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo 🛎️
        uses: actions/checkout@v4

      - name: Set up QEMU 🐳
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx 🐳
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry 🎫
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Collecting Metadata 🏷️
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_NAME }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            
      - name: Building And Pushing Image 🚀
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest 📋
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    needs: [build_and_push]
    name: Deployment
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code 🛎️
      uses: actions/checkout@v4

    - name: Setup SSH 🔑
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ env.MAIN_HOST }} >> ~/.ssh/known_hosts
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy 🚀
      run: |
        ssh -o StrictHostKeyChecking=no ${{ env.MAIN_HOST_USERNAME }}@${{ env.MAIN_HOST }} '
          cd lumina &&
          git pull origin main &&
          docker compose pull &&
          docker compose up -d
        '
